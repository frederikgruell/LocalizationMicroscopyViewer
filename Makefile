#############################################################################
# Makefile for building: bin/LocalMicViewer
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Mon Jan 25 17:33:34 2016
# Project:  LocalMicViewer.pro
# Template: app
# Command: $(QMAKE) -o Makefile LocalMicViewer.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I$(QTDIR)/include -Ibuild/ -Iui -Ibuild/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = build/

####### Files

HEADERS = src/mainwindowimpl.h \
		src/locmicview.h \
		src/datapoint.h \
		src/imagewidget.h
SOURCES = src/mainwindowimpl.cpp \
		src/main.cpp \
		src/locmicview.cpp \
		src/datapoint.cpp \
		src/imagewidget.cpp
OBJECTS = build/mainwindowimpl.o \
		build/main.o \
		build/locmicview.o \
		build/datapoint.o \
		build/imagewidget.o \
		build/mainwindow.o
FORMS = ui/mainwindow.ui
UICDECLS = build/mainwindow.h
UICIMPLS = build/mainwindow.cpp
SRCMOC   = build/moc_mainwindowimpl.cpp \
		build/moc_locmicview.cpp \
		build/moc_imagewidget.cpp \
		build/moc_mainwindow.cpp
OBJMOC = build/moc_mainwindowimpl.o \
		build/moc_locmicview.o \
		build/moc_imagewidget.o \
		build/moc_mainwindow.o
DIST	   = LocalMicViewer.pro
QMAKE_TARGET = LocalMicViewer
DESTDIR  = bin/
TARGET   = bin/LocalMicViewer

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d bin/ || mkdir -p bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: LocalMicViewer.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile LocalMicViewer.pro
qmake: 
	@$(QMAKE) -o Makefile LocalMicViewer.pro

dist: 
	@mkdir -p build/LocalMicViewer && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) build/LocalMicViewer/ && ( cd `dirname build/LocalMicViewer` && $(TAR) LocalMicViewer.tar LocalMicViewer && $(GZIP) LocalMicViewer.tar ) && $(MOVE) `dirname build/LocalMicViewer`/LocalMicViewer.tar.gz . && $(DEL_FILE) -r build/LocalMicViewer

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) bin/$(TARGET) $(TARGET)


FORCE:

####### Compile

build/mainwindowimpl.o: src/mainwindowimpl.cpp src/mainwindowimpl.h \
		src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/mainwindowimpl.o src/mainwindowimpl.cpp

build/main.o: src/main.cpp src/mainwindowimpl.h \
		src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/main.o src/main.cpp

build/locmicview.o: src/locmicview.cpp src/locmicview.h \
		src/imagewidget.h \
		src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/locmicview.o src/locmicview.cpp

build/datapoint.o: src/datapoint.cpp src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/datapoint.o src/datapoint.cpp

build/imagewidget.o: src/imagewidget.cpp src/imagewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/imagewidget.o src/imagewidget.cpp

build/mainwindow.h: ui/mainwindow.ui src/locmicview.h \
		src/imagewidget.h \
		src/datapoint.h
	$(UIC) ui/mainwindow.ui -o build/mainwindow.h

build/mainwindow.cpp: build/mainwindow.h ui/mainwindow.ui src/locmicview.h \
		src/imagewidget.h \
		src/datapoint.h
	$(UIC) ui/mainwindow.ui -i mainwindow.h -o build/mainwindow.cpp

build/mainwindow.o: build/mainwindow.cpp build/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/mainwindow.o build/mainwindow.cpp

build/moc_mainwindowimpl.o: build/moc_mainwindowimpl.cpp  src/mainwindowimpl.h src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_mainwindowimpl.o build/moc_mainwindowimpl.cpp

build/moc_locmicview.o: build/moc_locmicview.cpp  src/locmicview.h src/imagewidget.h \
		src/datapoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_locmicview.o build/moc_locmicview.cpp

build/moc_imagewidget.o: build/moc_imagewidget.cpp  src/imagewidget.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_imagewidget.o build/moc_imagewidget.cpp

build/moc_mainwindow.o: build/moc_mainwindow.cpp  build/mainwindow.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_mainwindow.o build/moc_mainwindow.cpp

build/moc_mainwindowimpl.cpp: $(MOC) src/mainwindowimpl.h
	$(MOC) src/mainwindowimpl.h -o build/moc_mainwindowimpl.cpp

build/moc_locmicview.cpp: $(MOC) src/locmicview.h
	$(MOC) src/locmicview.h -o build/moc_locmicview.cpp

build/moc_imagewidget.cpp: $(MOC) src/imagewidget.h
	$(MOC) src/imagewidget.h -o build/moc_imagewidget.cpp

build/moc_mainwindow.cpp: $(MOC) build/mainwindow.h
	$(MOC) build/mainwindow.h -o build/moc_mainwindow.cpp

####### Install

install:  

uninstall:  

